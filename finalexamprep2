
#include "iostream"
#include "iomanip"
#include "array"
#include <algorithm>
#include <cctype>
using namespace std;

/*double sumOfSeries(int n) {
    if (n == 1) {
        return 1.0;
    }
    return 1/pow( n, 2 ) + sumOfSeries(n - 1);

}
int main() {
    int n;
    cin >> n;
    double result = sumOfSeries(n);
    cout << result << endl;
    return 0;
}*/
/*double product(int a) {
    if( a == 1) {
        return 1.0/3.0;
    }
    return 1.0 / (a * ( a + 1)) * product( a - 1);
}
int main() {
    int a;
    cin >> a;
    double result = product(a);
    cout << result << endl;
}
*/
/*int sumofdigits(int n) {
    if (n == 0) {
        return 0;
    }
    return n % 10 + sumofdigits(n / 10);
}
int main() {
    int n;
    cin >> n;
    cout << sumofdigits(n) << endl;
    return 0;
}*/
/*int multiply(int a, int b) {
    if (b == 1) {
        return a;
    }
    return a + multiply(a, b-1);
}
int main() {
    int a, b;
    cin >> a >> b;
    cout << multiply(a, b) << endl;
    return 0;

}
*/
/*int minvalue(int a) {
    int arr[a];
    for (int i = 0; i < a; i++) {
        cin >> arr[i];
    }
    int temp = arr[0];
    for (int i = 1; i < a; i++) {
        if(temp > arr[i]) {
            temp = arr[i];

        }
    }
    return temp;
}

int main() {
    /*double score[10];
    score[0] = 78.8;
    for (int i = 0; i < 10; i++) {
        score[i] = i + 1;
    }
    return 0;
}*/
    /* int numbers[10];
     for (int i = 0; i < 10; i++) {
         numbers[i] = ::rand() % 1000;
     }
     int temp = numbers[0];
     for (int i = 0; i < 10; i++) {
         cout << "The value of element " << i << " is " << numbers[i] << endl;
         if (temp < numbers[i]) {
             temp = numbers[i];
         }
     }
     cout << temp << endl;
     return 0;

 }
 */
    /*array<int, 8> n;
    for (int i = 0; i < n.size(); i++) {
        n[i] = i + 7;
    }
    cout << setw(10) << endl;
    for (int i = 0; i < n.size(); i++) {
        cout << setw(7)<< i << setw(9) << n[i] << endl;
    }
    return 0;

}*/
    /* array<int, 5> arr = {1, 2, 3, 4, 5};
     for ( int n: arr) {
         cout << n << endl;
     }*/
    /* array<char, 5> charlist = {'c', 'b', 'a', 'd'};
     for(char ch: charlist) {
         cout << ch;
     }
     cout << setw(8);
     sort(charlist.begin(),charlist.end());
     for(char ch: charlist) {
         cout << ch;
     }
     return 0;*/
    /*int n[] = { 3, 7 ,4, 6};
    int p = sizeof(n) / sizeof(n[0]);
    sort(n, n + p);
    for (int i = 0; i < p; i++) {
        cout << n[i] << setw(3);
    }*/
    /*int n[] = { 'D', 'a' , 'E', 'b'};
    bool result = binary_search(charlist.begin(),charlist.end(), 'A');
    cout << (result ? "found" : "not found" << endl)6;
}*/
    /*int n;
    cin >> n;
    int arr[n];
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    float sum = 0;
    for (int i = 0; i < n; i++) {
        sum += arr[i];

    }
    cout << sum/ n << endl;*/
    /*int size;
    cin >> size;
    int result = minvalue(size);
    cout << result << endl;
    return 0;

}*/
/*int indexoflargestelement(int arr[], int size) {
    if (size <= 0)
        return -1;
    int max = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] >= max && i > max)
            max = i;
    }
    return max;
}
int main() {
    const int size = 15;
    int numbers[size];
    for (int i = 0; i < size; i++){
        cin >> numbers[i];
}
    int max = indexoflargestelement( numbers, size);
    if (max != -1) {
        cout << "The index of the largest element is: " << max << endl;
    } else {
        cout << "Invalid array size." << endl;
    }

    return 0;

}*/
